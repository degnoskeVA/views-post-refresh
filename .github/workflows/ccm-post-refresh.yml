# This is a basic workflow to help you get started with Actions

name: CCM Post Refresh Steps

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      sandbox:
        type: environment

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ccm-post-refresh:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.sandbox }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        
      - name: INSTALL SFDX 
        run: npm install sfdx-cli --global

      - name: AUTHENTICATE Sandbox
        shell: pwsh
        run: ../views-post-refresh/.github/workflows/authenticate-salesforce-authurl.ps1  -auth_url ${{ secrets.AUTH_URL}}  -org_alias ${{ secrets.ALIAS}} 

      - name: Set Default Org 
        run: sfdx config:set defaultusername=${{ secrets.USERNAME}} --global

      - name: INSERT DATA
        shell: pwsh
        run: |
          sfdx force:data:bulk:upsert -s Date__c -f "../views-post-refresh/CCM/data/Dates_Data.csv" -i ID -u ${{ secrets.USERNAME}}
          sfdx force:data:bulk:upsert -s AD_Account__c -f "../views-post-refresh/CCM/data/AD Stations Facility Upsert With Record.csv" -i ID -u ${{ secrets.USERNAME}}

      - name: SCHEDULE BATCH JOBS
        shell: pwsh
        run: sfdx force:apex:execute -f ../views-post-refresh/CCM/apex/schedule-batch-jobs.apex -u ${{ secrets.USERNAME}} 
        
      - name: DEPLOY EMAIL ALERT
        shell: pwsh
        run: sfdx force:source:deploy -m Workflow:Case -u ${{ secrets.USERNAME}} 

      - name: CREATE CONTACT ROLES
        shell: pwsh
        run: sfdx force:apex:execute -f ../views-post-refresh/CCM/apex/create-contacts-roles.apex -u ${{ secrets.USERNAME}} 

      - name: CREATE USERS
        shell: pwsh
        run: |
          Add-Content -Path temp-create-users.apex -Value "String environment = '${{ secrets.ALIAS}} ';" 
          Add-Content -Path temp-create-users.apex (Get-Content "../views-post-refresh/CCM/apex/create-users.apex")
          sfdx force:apex:execute -f temp-create-users.apex -u ${{ secrets.USERNAME}}


      - name: CREATE ACCOUNTS
        shell: pwsh
        run: sfdx force:apex:execute -f ../views-post-refresh/CCM/apex/create-accounts.apex -u ${{ secrets.USERNAME}} 

      - name: CREATE CONTACTS
        shell: pwsh
        run: |
          Add-Content -Path temp-create-contacts.apex -Value "String environment = '${{ secrets.ALIAS}}';" 
          Add-Content -Path temp-create-contacts.apex (Get-Content "../views-post-refresh/CCM/apex/create-contacts.apex")
          sfdx force:apex:execute -f temp-create-contacts.apex -u ${{ secrets.USERNAME}} 

      - name: ASSIGN PERMSETS
        shell: pwsh
        run: |
          Add-Content -Path temp-permset-assign.apex -Value "String environment = '${{ secrets.ALIAS}}';" 
          Add-Content -Path temp-permset-assign.apex (Get-Content "../views-post-refresh/CCM/apex/permset-assign.apex")
          sfdx force:apex:execute -f temp-permset-assign.apex -u ${{ secrets.USERNAME}}  

      - name: ASSIGN GROUPS
        shell: pwsh
        run: |
          Add-Content -Path temp-group-assign.apex -Value "String environment = '${{ secrets.ALIAS}}';" 
          Add-Content -Path temp-group-assign.apex (Get-Content "../views-post-refresh/CCM/apex/group-assign.apex")
          sfdx force:apex:execute -f temp-group-assign.apex -u ${{ secrets.USERNAME}}

      - name: Create Accounts from Primary Office Groups
        shell: pwsh
        run: sfdx force:apex:execute -f ../views-post-refresh/CCM/apex/primary-office-accounts.apex -u ${{ secrets.USERNAME}} 


      - name: Create Contacts for Accounts of Primary Office Groups
        shell: pwsh
        run: |
          sfdx force:apex:execute -f ../views-post-refresh/CCM/apex/primary-office-contacts-1.apex -u ${{ secrets.USERNAME}}  
          sfdx force:apex:execute -f ../views-post-refresh/CCM/apex/primary-office-contacts-2.apex -u ${{ secrets.USERNAME}}  
          sfdx force:apex:execute -f ../views-post-refresh/CCM/apex/primary-office-contacts-3.apex  -u ${{ secrets.USERNAME}}  


      - name: Setup Tiger Team FQs
        shell: pwsh
        run: sfdx force:apex:execute -f ../views-post-refresh/CCM/apex/setup-tiger-team-fq.apex -u ${{ secrets.USERNAME}}  
        
        # ../views-post-refresh/CCM/ccm-post-refresh.ps1 -auth_url ${{ secrets.AUTH_URL}} -username ${{ secrets.USERNAME}} -org_alias ${{ secrets.ALIAS}} 

